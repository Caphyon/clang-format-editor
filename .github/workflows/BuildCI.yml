# This is a basic workflow to help you get started with Actions

name: BuildCI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK 
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '5.0'

      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1
        
      - name: Setup NuGet 
        uses: NuGet/setup-nuget@v1.0.5
      
      - name: Restore Nuget packages
        run: nuget restore ClangFormatEditor.sln
      
      - name: Build Solution
        run: msbuild ClangFormatEditor.sln /t:ClangFormatEditor /p:Configuration="Release"

      - name: Create Clang Format Editor from AIP
        uses: caphyon/advinst-github-action@v1.0
        with:
          advinst-license: ${{ secrets.ADVINST_LICENSE_KEY }}
          advinst-enable-automation: 'true'
          aip-path: AIP\Clang Format Editor.aip
          aip-build-name: DefaultBuild
          aip-package-name: Clang Format Editor.msi
          aip-output-dir: ${{ github.workspace }}\AIP

      - name: Archive production Clang Format Editor.msi artifacts (cpt generated with advanced installer)
        uses: actions/upload-artifact@v2
        with:
          name: Clang Format Editor
          path: AIP\Clang Format Editor.msi

      - name: Execute unit tests
        run: dotnet test